Query: Create 5 books with the following names: C Sharp, Java, Python, PHP, Ruby
>>> Books.objects.create(title="C Sharp")
<Books: Books object (1)>
>>> Books.objects.create(title="Java")
<Books: Books object (2)>
>>> Books.objects.create(title="Python")
<Books: Books object (3)>
>>> Books.objects.create(title="PHP")
<Books: Books object (4)>
>>> Books.objects.create(title="Ruby")
<Books: Books object (5)>


Query: Create 5 different authors: Jane Austen, Emily Dickinson, Fyodor Dostoevsky, William Shakespeare, Lau Tzu
>>> Authors.objects.create(first_name="Jane", last_name="Austen")
<Authors: Authors object (1)>
>>> Authors.objects.create(first_name="Emily", last_name="Dickinson")
<Authors: Authors object (2)>
>>> Authors.objects.create(first_name="Fyodor", last_name="Dostoevsky")
<Authors: Authors object (3)>
>>> Authors.objects.create(first_name="William", last_name="Shakespeare")
<Authors: Authors object (4)>
>>> Authors.objects.create(first_name="Lau", last_name="Tzu")
<Authors: Authors object (5)>


Query: Change the name of the C Sharp book to C#
>>> book = Books.objects.get(id=1)
>>> book.name="C#"
>>> book.save()
>>> book.name
'C#'


Query: Change the first name of the 4th author to Bill
>>> author=Authors.objects.get(id=4)
>>> author.first_name="Bill"
>>> author.save()
>>> Authors.objects.get(id=4).first_name
'Bill'


Query: Assign the first author to the first 2 books
>>> book1 = Books.objects.get(id=1)
>>> book2 = Books.objects.get(id=2)
>>> author1=Authors.objects.get(id=1)
>>> author1.books.add(book1)
>>> author1.books.add(book2) 


Query: Assign the second author to the first 3 books
>>> author2 = Authors.objects.get(id=2)
>>> book3=Books.objects.get(id=3)
>>> author2.books.add(book1)
>>> author2.books.add(book2) 
>>> author2.books.add(book3)


Query: Assign the third author to the first 4 books
>>> author3 = Authors.objects.get(id=3)
>>> book4 = Books.objects.get(id=4)
>>> author3.books.add(book1)
>>> author3.books.add(book2) 
>>> author3.books.add(book3)
>>> author3.books.add(book4)

Query: Assign the fourth author to the first 5 books (or in other words, all the books)
>>> author4 = Authors.objects.get(id=4)
>>> book5 = Books.objects.get(id=5)
>>> author4.books.add(book1)     
>>> author4.books.add(book2) 
>>> author4.books.add(book3) 
>>> author4.books.add(book4) 
>>> author4.books.add(book5)


Query: Retrieve all the authors for the 3rd book
>>> book3.authors.all()
<QuerySet [<Authors: Authors object (2)>, <Authors: Authors object (3)>, <Authors: Authors object (4)>]>

Query: Remove the first author of the 3rd book
>>> book3.authors.all()
<QuerySet [<Authors: Authors object (3)>, <Authors: Authors object (4)>]>


Query: Add the 5th author as one of the authors of the 2nd book
>>> author5 = Authors.objects.get(id=5)
>>> author5.books.add(book2)
>>> book2.authors.all()
<QuerySet [<Authors: Authors object (1)>, <Authors: Authors object (2)>, <Authors: Authors object (3)>, <Authors: Authors object (4)>, <Authors: Authors object (5)>]>


Query: Find all the books that the 3rd author is part of
>>> author3.books.all()
<QuerySet [<Books: Books object (1)>, <Books: Books object (2)>, <Books: Books object (3)>, <Books: Books object (4)>]>

Query: Find all the authors that contributed to the 5th book
>>> book5.authors.all()
<QuerySet [<Authors: Authors object (4)>]>